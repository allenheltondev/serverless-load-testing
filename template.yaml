AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Serverless Load Testing

Globals:
  Function:
    Timeout: 15
    Runtime: nodejs16.x
    Tracing: Active
    Architectures:
      - arm64
    Layers:
      - !Ref DependencyLayer
    Handler: index.handler
    Environment:
      Variables:
        AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1

Resources:
  DependencyLayer:
    Type: AWS::Serverless::LayerVersion
    Metadata:
      BuildMethod: nodejs14.x
    Properties:
      LayerName: serverless-load-testing-dependency-layer
      ContentUri: layers/
      CompatibleRuntimes:
        - nodejs14.x

  LoadTestBucket:
    Type: AWS::S3::Bucket

  LoadTestQueue:
    Type: AWS::SQS::Queue
    Properties:
      VisibilityTimeout: 300

  TriggerLoadTestFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/trigger-load-test
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - sqs:SendMessage
              Resource: !GetAtt LoadTestQueue.Arn
            - Effect: Allow
              Action:
                - cloudwatch:GetDashboard
                - cloudwatch:PutDashboard
              Resource: 
                - !Sub arn:${AWS::Partition}:cloudwatch::${AWS::AccountId}:dashboard/${LoadTestMonitoringDashboard}
            - Effect: Allow
              Action:
                - lambda:GetFunctionConcurrency
                - lambda:DeleteFunctionConcurrency
                - lambda:PutFunctionConcurrency
              Resource:
                - !GetAtt RunNewmanFunction.Arn
            - Effect: Allow
              Action:
                - lambda:GetAccountSettings
              Resource: '*'
            - Effect: Allow
              Action:
                - lambda:UpdateEventSourceMapping
              Resource: 
                - !Sub arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:event-source-mapping:${SQSEventSourceMapping}
      Environment:
        Variables:
          QUEUE_URL: !Ref LoadTestQueue
          DASHBOARD_NAME: !Ref LoadTestMonitoringDashboard
          RUNNER_FUNCTION_NAME: !Ref RunNewmanFunction
          DEFAULT_BATCH_SIZE: 5
          EVENT_SOURCE_MAPPING_ID: !Ref SQSEventSourceMapping

  RunNewmanFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/run-newman
      Timeout: 900
      MemorySize: 1024
      EphemeralStorage:
        Size: 1024
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - cloudwatch:PutMetricData
              Resource: '*'
            - Effect: Allow
              Action:
                - s3:GetObject
              Resource: !Sub ${LoadTestBucket.Arn}/*
            - Effect: Allow
              Action:
                - sqs:ReceiveMessage
                - sqs:DeleteMessage
                - sqs:GetQueueAttributes
              Resource: !GetAtt LoadTestQueue.Arn
      Environment:
        Variables:
          BUCKET_NAME: !Ref LoadTestBucket             

  SQSEventSourceMapping:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      BatchSize: 5
      EventSourceArn: !GetAtt LoadTestQueue.Arn
      FunctionName: !Ref RunNewmanFunction
      Enabled: true

  LoadTestMonitoringDashboard:
    Type: AWS::CloudWatch::Dashboard
    Properties:
      DashboardBody: 
        Fn::Sub:
          - |-
            {
              "widgets": [
                  {
                      "type": "metric",
                      "x": 0,
                      "y": 0,
                      "width": 4,
                      "height": 3,
                      "properties": {
                          "metrics": [
                              [ "AWS/SQS", "ApproximateNumberOfMessagesVisible", "QueueName", "${loadTestQueue}" ]
                          ],
                          "view": "singleValue",
                          "region": "${region}",
                          "title": "Queued Runs",
                          "period": 300,
                          "liveData": true,
                          "setPeriodToTimeRange": false,
                          "sparkline": true,
                          "stat": "Average"
                      }
                  },
                  {
                      "type": "metric",
                      "x": 0,
                      "y": 3,
                      "width": 4,
                      "height": 3,
                      "properties": {
                          "metrics": [
                              [ "load-test", "total-runs" ]
                          ],
                          "view": "singleValue",
                          "title": "Completed Runs",
                          "region": "${region}",
                          "stat": "Sum",
                          "period": 3600,
                          "setPeriodToTimeRange": true,
                          "sparkline": false,
                          "liveData": true
                      }
                  },
                  {
                      "type": "metric",
                      "x": 4,
                      "y": 0,
                      "width": 6,
                      "height": 6,
                      "properties": {
                          "metrics": [
                              [ "load-test", "average-run-duration" ],
                              [ ".", "average-response-time", { "yAxis": "right" } ]
                          ],
                          "view": "timeSeries",
                          "stacked": false,
                          "region": "${region}",
                          "stat": "Average",
                          "period": 300,
                          "title": "Latency",
                          "liveData": true
                      }
                  }
              ]
            }
          - region: !Ref AWS::Region
            loadTestQueue: !GetAtt LoadTestQueue.QueueName